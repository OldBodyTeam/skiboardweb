import { DrawBlockType, drawData } from '@pages/draw/config';
import { cloneDeep } from 'lodash';

const a = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 3, 4, 5, 6, 7, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [],
];

const b = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 3, 4, 5, 6, 7, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const c = [[], [], [], [], [1, 2, 3, 4, 5], [0], [1], [1], [2], [2], [3], [3], [4], [5], [5, 6, 7, 8, 9]];
const d = [
  [],
  [],
  [],
  [],
  [1, 2, 3],
  [0, 4],
  [1, 6],
  [1, 7],
  [2, 8],
  [2, 8],
  [3, 9],
  [3, 9],
  [4, 9],
  [5, 9],
  [5, 6, 7],
];
const e = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0],
  [1],
  [1],
  [2],
  [2, 3, 4, 5, 6, 7],
  [3],
  [3],
  [4],
  [5],
  [5, 6, 7, 8, 9],
];
const f = [[], [], [], [], [1, 2, 3, 4, 5], [0], [1], [1], [2], [2, 3, 4, 5, 6, 7], [3], [3], [4], [5], []];
const g = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0],
  [1],
  [1],
  [2],
  [2, 3, 4, 5, 6, 7],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const h = [
  [],
  [],
  [],
  [],
  [],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 3, 4, 5, 6, 7, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [],
];
const i = [[], [], [], [], [], [3], [4], [4], [5], [5], [6], [6], [7], [8], []];
const j = [[], [], [], [], [], [6], [7], [7], [8], [8], [3, 9], [3.9], [4.1], [5, 11], [5, 6, 7, 8, 9]];
const k = [
  [],
  [],
  [],
  [],
  [0, 5],
  [0, 4],
  [1, 4],
  [1, 3],
  [2, 3],
  [2, 3, 4, 5, 6, 7],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [],
];
const l = [[], [], [], [], [], [0], [1], [1], [2], [2], [3, 9], [3, 9], [4, 10], [5, 11], [5, 6, 7, 8, 9]];
const m = [
  [],
  [],
  [],
  [],
  [],
  [1, 2, 4, 5],
  [1, 4, 7],
  [1, 4, 7],
  [2, 5, 8],
  [2, 5, 8],
  [3, 6, 9],
  [3, 6, 9],
  [4, 7, 10],
  [5, 8, 11],
  [],
];
const n = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [],
];
const o = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const p = [[], [], [], [], [1, 2, 3, 4, 5], [0, 6], [1, 7], [1, 7], [2, 8], [2, 3, 4, 5, 6, 7], [3], [3], [4], [5], []];
const q = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 8],
  [3, 9],
  [3, 7, 9],
  [4, 9, 10],
  [5, 11],
  [5, 6, 7, 8, 9, 11],
];
const r = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 3, 4, 5, 6, 7],
  [3, 4],
  [3, 5],
  [4, 7],
  [5, 9, 10, 11],
  [],
];
const s = [[], [], [], [], [1, 2, 3, 4, 5], [0], [1], [1], [2], [3, 4, 5, 6, 7], [9], [9], [10], [11], [5, 6, 7, 8, 9]];
const t = [[], [], [], [], [1, 2, 3, 4, 5], [3], [4], [4], [5], [5], [6], [6], [7], [8], []];
const u = [
  [],
  [],
  [],
  [],
  [],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const v = [[], [], [], [], [], [0, 6], [1, 7], [1, 7], [2, 8], [2, 8], [3, 9], [3, 9], [5, 9], [7, 9], [7]];
const w = [
  [],
  [],
  [],
  [],
  [],
  [0, 3, 6],
  [1, 4, 7],
  [1, 4, 7],
  [2, 5, 8],
  [2, 5, 8],
  [3, 6, 9],
  [3, 6, 9],
  [5, 6, 8, 9],
  [],
  [],
];
const x = [[], [], [], [], [], [], [1, 7], [2, 6], [4, 6], [5], [5, 7], [4, 8], [4, 10], [4, 12], []];
const y = [[], [], [], [], [], [0, 6], [1, 7], [1, 7], [2, 8], [3, 4, 5, 6, 7], [6], [6], [7], [8], []];
const z = [[], [], [], [], [], [0, 1, 2, 3, 4, 5, 6], [6], [5], [5], [4], [4], [3, 4, 5, 6, 7, 8, 9], [], [], []];

const zero = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [2, 8],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const one = [[], [], [], [], [], [3], [4], [4], [5], [5], [6], [6], [7], [8], []];
const two = [[], [], [], [], [1, 2, 3, 4, 5], [6], [7], [7], [8], [3, 4, 5, 6, 7], [3], [3], [4], [5], [5, 6, 7, 8, 9]];
const three = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [6],
  [7],
  [7],
  [8],
  [2, 3, 4, 5, 6, 7],
  [9],
  [9],
  [10],
  [11],
  [5, 6, 7, 8, 9],
];
const four = [[], [], [], [], [], [0, 6], [1, 7], [1, 7], [2, 8], [3, 4, 5, 6, 7, 8], [9], [9], [10], [11], []];
const five = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0],
  [1],
  [1],
  [2],
  [3, 4, 5, 6, 7],
  [9],
  [9],
  [10],
  [11],
  [5, 6, 7, 8, 9],
];
const six = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0],
  [1],
  [1],
  [2],
  [2, 3, 4, 5, 6, 7],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const seen = [[], [], [], [], [1, 2, 3, 4, 5], [6], [7], [7], [8], [8], [9], [9], [10], [11], []];
const eight = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [3, 4, 5, 6, 7],
  [3, 9],
  [3, 9],
  [4, 10],
  [5, 11],
  [5, 6, 7, 8, 9],
];
const nine = [
  [],
  [],
  [],
  [],
  [1, 2, 3, 4, 5],
  [0, 6],
  [1, 7],
  [1, 7],
  [2, 8],
  [3, 4, 5, 6, 7],
  [9],
  [9],
  [10],
  [11],
  [5, 6, 7, 8, 9],
];
const ScrollText = {
  a,
  b,
  c,
  d,
  e,
  f,
  g,
  h,
  i,
  j,
  k,
  l,
  m,
  n,
  o,
  p,
  q,
  r,
  s,
  t,
  u,
  v,
  w,
  x,
  y,
  z,
  '0': zero,
  '1': one,
  '2': two,
  '3': three,
  '4': four,
  '5': five,
  '6': six,
  '7': seen,
  '8': eight,
  '9': nine,
};
const covertMap = (scrollText: Record<string, number[][]>) => {
  const coverLiterMap = new Map<string, DrawBlockType>();
  Object.keys(scrollText).forEach((v) => {
    const optData = cloneDeep(drawData);
    scrollText[v].forEach((item, index) => {
      const row = optData.get(index);
      item.forEach((b) => {
        row?.set(`${index}-${b}`, { selectStatus: true });
      });
    });
    coverLiterMap.set(String(v), optData);
  });
  return coverLiterMap;
};
const configData = covertMap(ScrollText);
export { configData };
